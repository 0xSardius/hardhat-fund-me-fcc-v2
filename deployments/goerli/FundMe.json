{
  "address": "0xd7fd6e7cE5b2e44077e2d2adDcbB7Abda1F54e6B",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Funded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xaba7c1ca2e17c96f0ffca9a0b90f5dd2f65368ffbfb32309b04954b2cc31a125",
  "receipt": {
    "to": null,
    "from": "0xfc7125cCbb19A4F89Ae0dCb42afb6eB5d51eCd71",
    "contractAddress": "0xd7fd6e7cE5b2e44077e2d2adDcbB7Abda1F54e6B",
    "transactionIndex": 40,
    "gasUsed": "886289",
    "logsBloom": "0x
    "blockHash": "0xded07dceb2b5b46aa4439f5e4e756fe948c526ee7cccadebf94479c3eb884dbc",
    "transactionHash": "0xaba7c1ca2e17c96f0ffca9a0b90f5dd2f65368ffbfb32309b04954b2cc31a125",
    "logs": [],
    "blockNumber": 8650760,
    "cumulativeGasUsed": "5450262",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 1,
  "solcInputHash": "5537421c6df6da9643f83d9659f54966",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Funded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\n/// Get funds from users\\r\\n/// Withdraw funds\\r\\n/// Set a minimum funding value in USD\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./PriceConverter.sol\\\";\\r\\n\\r\\ncontract FundMe {\\r\\n    using PriceConverter for uint256;\\r\\n\\r\\n    event Funded(address indexed from, uint256 amount);\\r\\n\\r\\n    uint256 public constant MINIMUM_USD = 47 * 10 ** 18;\\r\\n    address private immutable i_owner;\\r\\n    address[] public funders;\\r\\n    mapping(address => uint256) public addressToAmountFunded;\\r\\n\\r\\n    AggregatorV3Interface public priceFeed;\\r\\n\\r\\n    constructor(address priceFeedAddress) {\\r\\n        i_owner = msg.sender;\\r\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\r\\n    }\\r\\n\\r\\n    function fund() public payable {\\r\\n        // Want to be able to set a minimum fund amount in USD\\r\\n        // 1. How do we send ETH to this contract?\\r\\n        require(\\r\\n            msg.value.getConversionRate(priceFeed) >= 1e18,\\r\\n            \\\"Must send at least 1 ETH\\\"\\r\\n        ); // Value of 1 ETH in Wei\\r\\n        funders.push(msg.sender);\\r\\n        addressToAmountFunded[msg.sender] += msg.value;\\r\\n        emit Funded(msg.sender, msg.value);\\r\\n    }\\r\\n\\r\\n    // How do we restrict so withdraw is only called by owner of the contract?\\r\\n    function withdraw() public onlyOwner {\\r\\n        for (uint256 i = 0; i < funders.length; i++) {\\r\\n            address funder = funders[i];\\r\\n            addressToAmountFunded[funder] = 0;\\r\\n        }\\r\\n        // reset the array\\r\\n        funders = new address[](0);\\r\\n        // call (1st lower level commands we use in solidity. Can call any function in Ethereum without having an ABI!)\\r\\n        (bool callSuccess, ) = payable(msg.sender).call{\\r\\n            value: address(this).balance\\r\\n        }(\\\"\\\");\\r\\n        require(callSuccess, \\\"call failed\\\");\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(msg.sender == i_owner, \\\"Sender is not the owner!\\\");\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xa0042bba13acb78e4ef0b0af4bf347266ea7471a7da1e56b117675d715f4f832\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n    function getPrice(\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        // ABI\\r\\n        // Address 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e (Goerli ETH/USD addr.)\\r\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\r\\n        // ETH in terms of USD\\r\\n        return uint256(price * 1e10);\\r\\n    }\\r\\n\\r\\n    function getVersion() internal view returns (uint256) {\\r\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(\\r\\n            0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\r\\n        );\\r\\n        return priceFeed.version();\\r\\n    }\\r\\n\\r\\n    function getConversionRate(\\r\\n        uint256 ethAmount,\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        // 3000.000000000000000000 = ETH / USD price\\r\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xcc5a6168c94084f519a20099fb6ee9eed8781c66b1e08c9e521c72ad86bcacfa\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b506040516200100738038062001007833981810160405281019061003491906100c7565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610142565b6000815190506100c18161012b565b92915050565b6000602082840312156100dd576100dc610126565b5b60006100eb848285016100b2565b91505092915050565b60006100ff82610106565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b610134816100f4565b811461013f57600080fd5b50565b60805160601c610ea662000161600039600061014d0152610ea66000f3fe6080604052600436106100555760003560e01c80633ccfd60b1461005a5780633e47d6f3146100715780636b69a592146100ae578063741bef1a146100d9578063b60d428814610104578063dc0d3dff1461010e575b600080fd5b34801561006657600080fd5b5061006f61014b565b005b34801561007d57600080fd5b5061009860048036038101906100939190610792565b610394565b6040516100a591906109cb565b60405180910390f35b3480156100ba57600080fd5b506100c36103ac565b6040516100d091906109cb565b60405180910390f35b3480156100e557600080fd5b506100ee6103b9565b6040516100fb9190610950565b60405180910390f35b61010c6103df565b005b34801561011a57600080fd5b50610135600480360381019061013091906107bf565b610567565b6040516101429190610935565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d0906109ab565b60405180910390fd5b60005b6000805490508110156102845760008082815481106101fe576101fd610d33565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061027c90610c8c565b9150506101dc565b50600067ffffffffffffffff8111156102a05761029f610d62565b5b6040519080825280602002602001820160405280156102ce5781602001602082028036833780820191505090505b50600090805190602001906102e4929190610682565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161030b90610920565b60006040518083038185875af1925050503d8060008114610348576040519150601f19603f3d011682016040523d82523d6000602084013e61034d565b606091505b5050905080610391576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103889061098b565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b68028c418afbbb5c000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b670de0b6b3a764000061041d600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105a690919063ffffffff16565b101561045e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104559061096b565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105109190610a02565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f5af8184bef8e4b45eb9f6ed7734d04da38ced226495548f46e0c8ff8d7d9a5243460405161055d91906109cb565b60405180910390a2565b6000818154811061057757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105b2836105e2565b90506000670de0b6b3a764000085836105cb9190610ba0565b6105d59190610a58565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561062b57600080fd5b505afa15801561063f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066391906107ec565b5050509150506402540be4008161067a9190610a89565b915050919050565b8280548282559060005260206000209081019282156106fb579160200282015b828111156106fa5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106a2565b5b509050610708919061070c565b5090565b5b8082111561072557600081600090555060010161070d565b5090565b60008135905061073881610e14565b92915050565b60008151905061074d81610e2b565b92915050565b60008135905061076281610e42565b92915050565b60008151905061077781610e42565b92915050565b60008151905061078c81610e59565b92915050565b6000602082840312156107a8576107a7610d91565b5b60006107b684828501610729565b91505092915050565b6000602082840312156107d5576107d4610d91565b5b60006107e384828501610753565b91505092915050565b600080600080600060a0868803121561080857610807610d91565b5b60006108168882890161077d565b95505060206108278882890161073e565b945050604061083888828901610768565b935050606061084988828901610768565b925050608061085a8882890161077d565b9150509295509295909350565b61087081610bfa565b82525050565b61087f81610c56565b82525050565b60006108926018836109f1565b915061089d82610d96565b602082019050919050565b60006108b5600b836109f1565b91506108c082610dbf565b602082019050919050565b60006108d86000836109e6565b91506108e382610de8565b600082019050919050565b60006108fb6018836109f1565b915061090682610deb565b602082019050919050565b61091a81610c36565b82525050565b600061092b826108cb565b9150819050919050565b600060208201905061094a6000830184610867565b92915050565b60006020820190506109656000830184610876565b92915050565b6000602082019050818103600083015261098481610885565b9050919050565b600060208201905081810360008301526109a4816108a8565b9050919050565b600060208201905081810360008301526109c4816108ee565b9050919050565b60006020820190506109e06000830184610911565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610a0d82610c36565b9150610a1883610c36565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a4d57610a4c610cd5565b5b828201905092915050565b6000610a6382610c36565b9150610a6e83610c36565b925082610a7e57610a7d610d04565b5b828204905092915050565b6000610a9482610c0c565b9150610a9f83610c0c565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610ade57610add610cd5565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610b1b57610b1a610cd5565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610b5857610b57610cd5565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610b9557610b94610cd5565b5b828202905092915050565b6000610bab82610c36565b9150610bb683610c36565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bef57610bee610cd5565b5b828202905092915050565b6000610c0582610c16565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610c6182610c68565b9050919050565b6000610c7382610c7a565b9050919050565b6000610c8582610c16565b9050919050565b6000610c9782610c36565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610cca57610cc9610cd5565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f4d7573742073656e64206174206c656173742031204554480000000000000000600082015250565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b50565b7f53656e646572206973206e6f7420746865206f776e6572210000000000000000600082015250565b610e1d81610bfa565b8114610e2857600080fd5b50565b610e3481610c0c565b8114610e3f57600080fd5b50565b610e4b81610c36565b8114610e5657600080fd5b50565b610e6281610c40565b8114610e6d57600080fd5b5056fea26469706673582212204cd622fe5f88cbf3b3abd0d494932636ecac8fe5e5a2b4492a64c20e51190f2f64736f6c63430008070033",
  "deployedBytecode": "0x6080604052600436106100555760003560e01c80633ccfd60b1461005a5780633e47d6f3146100715780636b69a592146100ae578063741bef1a146100d9578063b60d428814610104578063dc0d3dff1461010e575b600080fd5b34801561006657600080fd5b5061006f61014b565b005b34801561007d57600080fd5b5061009860048036038101906100939190610792565b610394565b6040516100a591906109cb565b60405180910390f35b3480156100ba57600080fd5b506100c36103ac565b6040516100d091906109cb565b60405180910390f35b3480156100e557600080fd5b506100ee6103b9565b6040516100fb9190610950565b60405180910390f35b61010c6103df565b005b34801561011a57600080fd5b50610135600480360381019061013091906107bf565b610567565b6040516101429190610935565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d0906109ab565b60405180910390fd5b60005b6000805490508110156102845760008082815481106101fe576101fd610d33565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061027c90610c8c565b9150506101dc565b50600067ffffffffffffffff8111156102a05761029f610d62565b5b6040519080825280602002602001820160405280156102ce5781602001602082028036833780820191505090505b50600090805190602001906102e4929190610682565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161030b90610920565b60006040518083038185875af1925050503d8060008114610348576040519150601f19603f3d011682016040523d82523d6000602084013e61034d565b606091505b5050905080610391576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103889061098b565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b68028c418afbbb5c000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b670de0b6b3a764000061041d600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105a690919063ffffffff16565b101561045e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104559061096b565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105109190610a02565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f5af8184bef8e4b45eb9f6ed7734d04da38ced226495548f46e0c8ff8d7d9a5243460405161055d91906109cb565b60405180910390a2565b6000818154811061057757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105b2836105e2565b90506000670de0b6b3a764000085836105cb9190610ba0565b6105d59190610a58565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561062b57600080fd5b505afa15801561063f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066391906107ec565b5050509150506402540be4008161067a9190610a89565b915050919050565b8280548282559060005260206000209081019282156106fb579160200282015b828111156106fa5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106a2565b5b509050610708919061070c565b5090565b5b8082111561072557600081600090555060010161070d565b5090565b60008135905061073881610e14565b92915050565b60008151905061074d81610e2b565b92915050565b60008135905061076281610e42565b92915050565b60008151905061077781610e42565b92915050565b60008151905061078c81610e59565b92915050565b6000602082840312156107a8576107a7610d91565b5b60006107b684828501610729565b91505092915050565b6000602082840312156107d5576107d4610d91565b5b60006107e384828501610753565b91505092915050565b600080600080600060a0868803121561080857610807610d91565b5b60006108168882890161077d565b95505060206108278882890161073e565b945050604061083888828901610768565b935050606061084988828901610768565b925050608061085a8882890161077d565b9150509295509295909350565b61087081610bfa565b82525050565b61087f81610c56565b82525050565b60006108926018836109f1565b915061089d82610d96565b602082019050919050565b60006108b5600b836109f1565b91506108c082610dbf565b602082019050919050565b60006108d86000836109e6565b91506108e382610de8565b600082019050919050565b60006108fb6018836109f1565b915061090682610deb565b602082019050919050565b61091a81610c36565b82525050565b600061092b826108cb565b9150819050919050565b600060208201905061094a6000830184610867565b92915050565b60006020820190506109656000830184610876565b92915050565b6000602082019050818103600083015261098481610885565b9050919050565b600060208201905081810360008301526109a4816108a8565b9050919050565b600060208201905081810360008301526109c4816108ee565b9050919050565b60006020820190506109e06000830184610911565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610a0d82610c36565b9150610a1883610c36565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a4d57610a4c610cd5565b5b828201905092915050565b6000610a6382610c36565b9150610a6e83610c36565b925082610a7e57610a7d610d04565b5b828204905092915050565b6000610a9482610c0c565b9150610a9f83610c0c565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610ade57610add610cd5565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610b1b57610b1a610cd5565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610b5857610b57610cd5565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610b9557610b94610cd5565b5b828202905092915050565b6000610bab82610c36565b9150610bb683610c36565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bef57610bee610cd5565b5b828202905092915050565b6000610c0582610c16565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610c6182610c68565b9050919050565b6000610c7382610c7a565b9050919050565b6000610c8582610c16565b9050919050565b6000610c9782610c36565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610cca57610cc9610cd5565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f4d7573742073656e64206174206c656173742031204554480000000000000000600082015250565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b50565b7f53656e646572206973206e6f7420746865206f776e6572210000000000000000600082015250565b610e1d81610bfa565b8114610e2857600080fd5b50565b610e3481610c0c565b8114610e3f57600080fd5b50565b610e4b81610c36565b8114610e5657600080fd5b50565b610e6281610c40565b8114610e6d57600080fd5b5056fea26469706673582212204cd622fe5f88cbf3b3abd0d494932636ecac8fe5e5a2b4492a64c20e51190f2f64736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 69,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 76,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}